//#line 2 "/opt/ros/indigo/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
// 
// File autogenerated for the automap package 
// by the dynamic_reconfigure package.
// Please do not edit.
// 
// ********************************************************/

#ifndef __automap__EXPLORATIONCONFIG_H__
#define __automap__EXPLORATIONCONFIG_H__

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace automap
{
  class ExplorationConfigStatics;
  
  class ExplorationConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l, 
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      
      virtual void clamp(ExplorationConfig &config, const ExplorationConfig &max, const ExplorationConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const ExplorationConfig &config1, const ExplorationConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, ExplorationConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const ExplorationConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, ExplorationConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const ExplorationConfig &config) const = 0;
      virtual void getValue(const ExplorationConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;
    
    template <class T>
    class ParamDescription : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string name, std::string type, uint32_t level, 
          std::string description, std::string edit_method, T ExplorationConfig::* f) :
        AbstractParamDescription(name, type, level, description, edit_method),
        field(f)
      {}

      T (ExplorationConfig::* field);

      virtual void clamp(ExplorationConfig &config, const ExplorationConfig &max, const ExplorationConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;
        
        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const ExplorationConfig &config1, const ExplorationConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, ExplorationConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const ExplorationConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, ExplorationConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const ExplorationConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const ExplorationConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, ExplorationConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    template<class T, class PT>
    class GroupDescription : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string name, std::string type, int parent, int id, bool s, T PT::* f) : AbstractGroupDescription(name, type, parent, id, s), field(f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, ExplorationConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<ExplorationConfig::AbstractGroupDescriptionConstPtr> groups;
    };
    
class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(ExplorationConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("planner_robot_width"==(*_i)->name){planner_robot_width = boost::any_cast<double>(val);}
        if("planner_robot_length"==(*_i)->name){planner_robot_length = boost::any_cast<double>(val);}
        if("planner_downsampling_factor"==(*_i)->name){planner_downsampling_factor = boost::any_cast<double>(val);}
        if("planner_min_obstacle_distance"==(*_i)->name){planner_min_obstacle_distance = boost::any_cast<double>(val);}
        if("planner_alpha"==(*_i)->name){planner_alpha = boost::any_cast<double>(val);}
        if("frontier_tolerance"==(*_i)->name){frontier_tolerance = boost::any_cast<double>(val);}
        if("frontier_dilation_rate"==(*_i)->name){frontier_dilation_rate = boost::any_cast<int>(val);}
        if("frontier_blur_kernel"==(*_i)->name){frontier_blur_kernel = boost::any_cast<int>(val);}
        if("frontier_inflate_frontiers"==(*_i)->name){frontier_inflate_frontiers = boost::any_cast<bool>(val);}
        if("exploration_rolling_window_width"==(*_i)->name){exploration_rolling_window_width = boost::any_cast<double>(val);}
        if("exploration_rolling_window_height"==(*_i)->name){exploration_rolling_window_height = boost::any_cast<double>(val);}
        if("exploration_score_simple_dist_exp"==(*_i)->name){exploration_score_simple_dist_exp = boost::any_cast<double>(val);}
        if("exploration_score_simple_angle_exp"==(*_i)->name){exploration_score_simple_angle_exp = boost::any_cast<double>(val);}
        if("exploration_score_nbv_sampling_points"==(*_i)->name){exploration_score_nbv_sampling_points = boost::any_cast<int>(val);}
        if("exploration_score_nbv_sensor_min_range"==(*_i)->name){exploration_score_nbv_sensor_min_range = boost::any_cast<double>(val);}
        if("exploration_score_nbv_sensor_max_range"==(*_i)->name){exploration_score_nbv_sensor_max_range = boost::any_cast<double>(val);}
        if("exploration_score_nbv_sensor_angular_accuracy"==(*_i)->name){exploration_score_nbv_sensor_angular_accuracy = boost::any_cast<double>(val);}
        if("exploration_score_nbv_sensor_fov"==(*_i)->name){exploration_score_nbv_sensor_fov = boost::any_cast<double>(val);}
        if("exploration_score_nbv_angular_scan_accuracy"==(*_i)->name){exploration_score_nbv_angular_scan_accuracy = boost::any_cast<double>(val);}
        if("exploration_score_nbv_angular_scan_range"==(*_i)->name){exploration_score_nbv_angular_scan_range = boost::any_cast<double>(val);}
        if("exploration_score_nbv_obstacle_inflation"==(*_i)->name){exploration_score_nbv_obstacle_inflation = boost::any_cast<int>(val);}
        if("exploration_score_nbv_alpha"==(*_i)->name){exploration_score_nbv_alpha = boost::any_cast<double>(val);}
        if("exploration_score_nbv_beta"==(*_i)->name){exploration_score_nbv_beta = boost::any_cast<double>(val);}
        if("exploration_goal_accuracy_position"==(*_i)->name){exploration_goal_accuracy_position = boost::any_cast<double>(val);}
        if("exploration_goal_accuracy_angle"==(*_i)->name){exploration_goal_accuracy_angle = boost::any_cast<double>(val);}
        if("node_retries"==(*_i)->name){node_retries = boost::any_cast<int>(val);}
        if("node_information_gain"==(*_i)->name){node_information_gain = boost::any_cast<double>(val);}
        if("node_loop_rate"==(*_i)->name){node_loop_rate = boost::any_cast<double>(val);}
        if("node_control_on"==(*_i)->name){node_control_on = boost::any_cast<bool>(val);}
        if("node_sensing_on"==(*_i)->name){node_sensing_on = boost::any_cast<bool>(val);}
        if("node_use_nbv"==(*_i)->name){node_use_nbv = boost::any_cast<bool>(val);}
        if("node_show_exploration_planner_result"==(*_i)->name){node_show_exploration_planner_result = boost::any_cast<bool>(val);}
      }
    }

    double planner_robot_width;
double planner_robot_length;
double planner_downsampling_factor;
double planner_min_obstacle_distance;
double planner_alpha;
double frontier_tolerance;
int frontier_dilation_rate;
int frontier_blur_kernel;
bool frontier_inflate_frontiers;
double exploration_rolling_window_width;
double exploration_rolling_window_height;
double exploration_score_simple_dist_exp;
double exploration_score_simple_angle_exp;
int exploration_score_nbv_sampling_points;
double exploration_score_nbv_sensor_min_range;
double exploration_score_nbv_sensor_max_range;
double exploration_score_nbv_sensor_angular_accuracy;
double exploration_score_nbv_sensor_fov;
double exploration_score_nbv_angular_scan_accuracy;
double exploration_score_nbv_angular_scan_range;
int exploration_score_nbv_obstacle_inflation;
double exploration_score_nbv_alpha;
double exploration_score_nbv_beta;
double exploration_goal_accuracy_position;
double exploration_goal_accuracy_angle;
int node_retries;
double node_information_gain;
double node_loop_rate;
bool node_control_on;
bool node_sensing_on;
bool node_use_nbv;
bool node_show_exploration_planner_result;

    bool state;
    std::string name;

    
}groups;



//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double planner_robot_width;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double planner_robot_length;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double planner_downsampling_factor;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double planner_min_obstacle_distance;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double planner_alpha;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double frontier_tolerance;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int frontier_dilation_rate;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int frontier_blur_kernel;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool frontier_inflate_frontiers;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_rolling_window_width;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_rolling_window_height;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_score_simple_dist_exp;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_score_simple_angle_exp;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int exploration_score_nbv_sampling_points;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_score_nbv_sensor_min_range;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_score_nbv_sensor_max_range;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_score_nbv_sensor_angular_accuracy;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_score_nbv_sensor_fov;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_score_nbv_angular_scan_accuracy;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_score_nbv_angular_scan_range;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int exploration_score_nbv_obstacle_inflation;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_score_nbv_alpha;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_score_nbv_beta;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_goal_accuracy_position;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double exploration_goal_accuracy_angle;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int node_retries;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double node_information_gain;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double node_loop_rate;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool node_control_on;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool node_sensing_on;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool node_use_nbv;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool node_show_exploration_planner_result;
//#line 218 "/opt/ros/indigo/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("ExplorationConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }
    
    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }
    
    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const ExplorationConfig &__max__ = __getMax__();
      const ExplorationConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const ExplorationConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }
    
    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const ExplorationConfig &__getDefault__();
    static const ExplorationConfig &__getMax__();
    static const ExplorationConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();
    
  private:
    static const ExplorationConfigStatics *__get_statics__();
  };
  
  template <> // Max and min are ignored for strings.
  inline void ExplorationConfig::ParamDescription<std::string>::clamp(ExplorationConfig &config, const ExplorationConfig &max, const ExplorationConfig &min) const
  {
    return;
  }

  class ExplorationConfigStatics
  {
    friend class ExplorationConfig;
    
    ExplorationConfigStatics()
    {
ExplorationConfig::GroupDescription<ExplorationConfig::DEFAULT, ExplorationConfig> Default("Default", "", 0, 0, true, &ExplorationConfig::groups);
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.planner_robot_width = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.planner_robot_width = 2.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.planner_robot_width = 0.25;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("planner_robot_width", "double", 0, "width of the robot(m), used for collision avoidance", "", &ExplorationConfig::planner_robot_width)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("planner_robot_width", "double", 0, "width of the robot(m), used for collision avoidance", "", &ExplorationConfig::planner_robot_width)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.planner_robot_length = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.planner_robot_length = 2.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.planner_robot_length = 0.4;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("planner_robot_length", "double", 0, "length of the robot(m), used for collision avoidance", "", &ExplorationConfig::planner_robot_length)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("planner_robot_length", "double", 0, "length of the robot(m), used for collision avoidance", "", &ExplorationConfig::planner_robot_length)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.planner_downsampling_factor = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.planner_downsampling_factor = 1.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.planner_downsampling_factor = 0.2;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("planner_downsampling_factor", "double", 0, "downsampling of the occupancy grid, increases performance", "", &ExplorationConfig::planner_downsampling_factor)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("planner_downsampling_factor", "double", 0, "downsampling of the occupancy grid, increases performance", "", &ExplorationConfig::planner_downsampling_factor)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.planner_min_obstacle_distance = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.planner_min_obstacle_distance = 2.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.planner_min_obstacle_distance = 0.4;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("planner_min_obstacle_distance", "double", 0, "minimum allowed distance to obstacles(m)", "", &ExplorationConfig::planner_min_obstacle_distance)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("planner_min_obstacle_distance", "double", 0, "minimum allowed distance to obstacles(m)", "", &ExplorationConfig::planner_min_obstacle_distance)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.planner_alpha = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.planner_alpha = 2.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.planner_alpha = 1.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("planner_alpha", "double", 0, "scales how strongly obstacles may influence path planning", "", &ExplorationConfig::planner_alpha)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("planner_alpha", "double", 0, "scales how strongly obstacles may influence path planning", "", &ExplorationConfig::planner_alpha)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.frontier_tolerance = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.frontier_tolerance = 10.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.frontier_tolerance = 1.2;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("frontier_tolerance", "double", 0, "ignores gaps bigger than the diagonal of the robot footprint multiplied by this factor", "", &ExplorationConfig::frontier_tolerance)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("frontier_tolerance", "double", 0, "ignores gaps bigger than the diagonal of the robot footprint multiplied by this factor", "", &ExplorationConfig::frontier_tolerance)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.frontier_dilation_rate = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.frontier_dilation_rate = 10;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.frontier_dilation_rate = 3;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<int>("frontier_dilation_rate", "int", 0, "inflates detected objects to ensure clean removal from frontiers", "", &ExplorationConfig::frontier_dilation_rate)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<int>("frontier_dilation_rate", "int", 0, "inflates detected objects to ensure clean removal from frontiers", "", &ExplorationConfig::frontier_dilation_rate)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.frontier_blur_kernel = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.frontier_blur_kernel = 10;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.frontier_blur_kernel = 5;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<int>("frontier_blur_kernel", "int", 0, "smoothens the map to remove micro holes produced by a range sensor", "", &ExplorationConfig::frontier_blur_kernel)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<int>("frontier_blur_kernel", "int", 0, "smoothens the map to remove micro holes produced by a range sensor", "", &ExplorationConfig::frontier_blur_kernel)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.frontier_inflate_frontiers = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.frontier_inflate_frontiers = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.frontier_inflate_frontiers = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<bool>("frontier_inflate_frontiers", "bool", 0, "enlarges frontiers to connect adjacent frontiers separated by noise", "", &ExplorationConfig::frontier_inflate_frontiers)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<bool>("frontier_inflate_frontiers", "bool", 0, "enlarges frontiers to connect adjacent frontiers separated by noise", "", &ExplorationConfig::frontier_inflate_frontiers)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_rolling_window_width = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_rolling_window_width = 200.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_rolling_window_width = 22.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_rolling_window_width", "double", 0, "width(m) of the local exploration perspective", "", &ExplorationConfig::exploration_rolling_window_width)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_rolling_window_width", "double", 0, "width(m) of the local exploration perspective", "", &ExplorationConfig::exploration_rolling_window_width)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_rolling_window_height = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_rolling_window_height = 200.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_rolling_window_height = 22.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_rolling_window_height", "double", 0, "height(m) of the local exploration perspective", "", &ExplorationConfig::exploration_rolling_window_height)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_rolling_window_height", "double", 0, "height(m) of the local exploration perspective", "", &ExplorationConfig::exploration_rolling_window_height)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_score_simple_dist_exp = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_score_simple_dist_exp = 10.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_score_simple_dist_exp = 4.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_simple_dist_exp", "double", 0, "exponent of the distance weight function", "", &ExplorationConfig::exploration_score_simple_dist_exp)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_simple_dist_exp", "double", 0, "exponent of the distance weight function", "", &ExplorationConfig::exploration_score_simple_dist_exp)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_score_simple_angle_exp = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_score_simple_angle_exp = 10.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_score_simple_angle_exp = 4.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_simple_angle_exp", "double", 0, "exponent of the view angle weight function", "", &ExplorationConfig::exploration_score_simple_angle_exp)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_simple_angle_exp", "double", 0, "exponent of the view angle weight function", "", &ExplorationConfig::exploration_score_simple_angle_exp)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_score_nbv_sampling_points = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_score_nbv_sampling_points = 200;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_score_nbv_sampling_points = 25;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<int>("exploration_score_nbv_sampling_points", "int", 0, "number of random generated sampling points per frontier", "", &ExplorationConfig::exploration_score_nbv_sampling_points)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<int>("exploration_score_nbv_sampling_points", "int", 0, "number of random generated sampling points per frontier", "", &ExplorationConfig::exploration_score_nbv_sampling_points)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_score_nbv_sensor_min_range = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_score_nbv_sensor_min_range = 30.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_score_nbv_sensor_min_range = 1.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_sensor_min_range", "double", 0, "minimum sensing distance(m) of the range sensor", "", &ExplorationConfig::exploration_score_nbv_sensor_min_range)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_sensor_min_range", "double", 0, "minimum sensing distance(m) of the range sensor", "", &ExplorationConfig::exploration_score_nbv_sensor_min_range)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_score_nbv_sensor_max_range = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_score_nbv_sensor_max_range = 30.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_score_nbv_sensor_max_range = 7.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_sensor_max_range", "double", 0, "maximum sensing distance(m) of the range sensor", "", &ExplorationConfig::exploration_score_nbv_sensor_max_range)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_sensor_max_range", "double", 0, "maximum sensing distance(m) of the range sensor", "", &ExplorationConfig::exploration_score_nbv_sensor_max_range)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_score_nbv_sensor_angular_accuracy = 0.01;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_score_nbv_sensor_angular_accuracy = 360.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_score_nbv_sensor_angular_accuracy = 0.1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_sensor_angular_accuracy", "double", 0, "angular sensing accuracy(deg) of the range sensor", "", &ExplorationConfig::exploration_score_nbv_sensor_angular_accuracy)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_sensor_angular_accuracy", "double", 0, "angular sensing accuracy(deg) of the range sensor", "", &ExplorationConfig::exploration_score_nbv_sensor_angular_accuracy)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_score_nbv_sensor_fov = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_score_nbv_sensor_fov = 360.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_score_nbv_sensor_fov = 70.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_sensor_fov", "double", 0, "FOV of the range sensor", "", &ExplorationConfig::exploration_score_nbv_sensor_fov)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_sensor_fov", "double", 0, "FOV of the range sensor", "", &ExplorationConfig::exploration_score_nbv_sensor_fov)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_score_nbv_angular_scan_accuracy = 0.01;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_score_nbv_angular_scan_accuracy = 360.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_score_nbv_angular_scan_accuracy = 10.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_angular_scan_accuracy", "double", 0, "angular sensing accuracy(deg) used in sampling on a specific frontier", "", &ExplorationConfig::exploration_score_nbv_angular_scan_accuracy)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_angular_scan_accuracy", "double", 0, "angular sensing accuracy(deg) used in sampling on a specific frontier", "", &ExplorationConfig::exploration_score_nbv_angular_scan_accuracy)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_score_nbv_angular_scan_range = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_score_nbv_angular_scan_range = 360.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_score_nbv_angular_scan_range = 180.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_angular_scan_range", "double", 0, "maximum angular range(deg) to be sampled on a specific frontier", "", &ExplorationConfig::exploration_score_nbv_angular_scan_range)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_angular_scan_range", "double", 0, "maximum angular range(deg) to be sampled on a specific frontier", "", &ExplorationConfig::exploration_score_nbv_angular_scan_range)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_score_nbv_obstacle_inflation = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_score_nbv_obstacle_inflation = 10;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_score_nbv_obstacle_inflation = 2;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<int>("exploration_score_nbv_obstacle_inflation", "int", 0, "prevents escaping rays during sampling operations", "", &ExplorationConfig::exploration_score_nbv_obstacle_inflation)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<int>("exploration_score_nbv_obstacle_inflation", "int", 0, "prevents escaping rays during sampling operations", "", &ExplorationConfig::exploration_score_nbv_obstacle_inflation)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_score_nbv_alpha = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_score_nbv_alpha = 10.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_score_nbv_alpha = 0.1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_alpha", "double", 0, "weight of distance in the exponent of the scoring function", "", &ExplorationConfig::exploration_score_nbv_alpha)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_alpha", "double", 0, "weight of distance in the exponent of the scoring function", "", &ExplorationConfig::exploration_score_nbv_alpha)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_score_nbv_beta = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_score_nbv_beta = 10.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_score_nbv_beta = 1.5;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_beta", "double", 0, "weight of angledifferential in the exponent of the scoring function", "", &ExplorationConfig::exploration_score_nbv_beta)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_score_nbv_beta", "double", 0, "weight of angledifferential in the exponent of the scoring function", "", &ExplorationConfig::exploration_score_nbv_beta)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_goal_accuracy_position = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_goal_accuracy_position = 200.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_goal_accuracy_position = 1.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_goal_accuracy_position", "double", 0, "a distance(m) threshold below which a frontier is viewed as reached", "", &ExplorationConfig::exploration_goal_accuracy_position)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_goal_accuracy_position", "double", 0, "a distance(m) threshold below which a frontier is viewed as reached", "", &ExplorationConfig::exploration_goal_accuracy_position)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.exploration_goal_accuracy_angle = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.exploration_goal_accuracy_angle = 6.3;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.exploration_goal_accuracy_angle = 0.5;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_goal_accuracy_angle", "double", 0, "an angular(rad) threshold below which a frontier is viewed as reached", "", &ExplorationConfig::exploration_goal_accuracy_angle)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("exploration_goal_accuracy_angle", "double", 0, "an angular(rad) threshold below which a frontier is viewed as reached", "", &ExplorationConfig::exploration_goal_accuracy_angle)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.node_retries = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.node_retries = 100;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.node_retries = 30;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<int>("node_retries", "int", 0, "number of exploration retries before a new exploration is forced", "", &ExplorationConfig::node_retries)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<int>("node_retries", "int", 0, "number of exploration retries before a new exploration is forced", "", &ExplorationConfig::node_retries)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.node_information_gain = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.node_information_gain = 100000.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.node_information_gain = 3500.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("node_information_gain", "double", 0, "minimum required amount of information gained before a new exploration is planned", "", &ExplorationConfig::node_information_gain)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("node_information_gain", "double", 0, "minimum required amount of information gained before a new exploration is planned", "", &ExplorationConfig::node_information_gain)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.node_loop_rate = 0.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.node_loop_rate = 100.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.node_loop_rate = 2.0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("node_loop_rate", "double", 0, "frequency of the main loop(hz)", "", &ExplorationConfig::node_loop_rate)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<double>("node_loop_rate", "double", 0, "frequency of the main loop(hz)", "", &ExplorationConfig::node_loop_rate)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.node_control_on = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.node_control_on = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.node_control_on = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<bool>("node_control_on", "bool", 0, "send motion control commands", "", &ExplorationConfig::node_control_on)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<bool>("node_control_on", "bool", 0, "send motion control commands", "", &ExplorationConfig::node_control_on)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.node_sensing_on = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.node_sensing_on = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.node_sensing_on = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<bool>("node_sensing_on", "bool", 0, "analyze map for next action", "", &ExplorationConfig::node_sensing_on)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<bool>("node_sensing_on", "bool", 0, "analyze map for next action", "", &ExplorationConfig::node_sensing_on)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.node_use_nbv = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.node_use_nbv = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.node_use_nbv = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<bool>("node_use_nbv", "bool", 0, "use nbv exploration strategy", "", &ExplorationConfig::node_use_nbv)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<bool>("node_use_nbv", "bool", 0, "use nbv exploration strategy", "", &ExplorationConfig::node_use_nbv)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.node_show_exploration_planner_result = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.node_show_exploration_planner_result = 1;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.node_show_exploration_planner_result = 0;
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<bool>("node_show_exploration_planner_result", "bool", 0, "broadcasts the occupancy grid with highlighted valid frontiers", "", &ExplorationConfig::node_show_exploration_planner_result)));
//#line 280 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(ExplorationConfig::AbstractParamDescriptionConstPtr(new ExplorationConfig::ParamDescription<bool>("node_show_exploration_planner_result", "bool", 0, "broadcasts the occupancy grid with highlighted valid frontiers", "", &ExplorationConfig::node_show_exploration_planner_result)));
//#line 235 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 235 "/opt/ros/indigo/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(ExplorationConfig::AbstractGroupDescriptionConstPtr(new ExplorationConfig::GroupDescription<ExplorationConfig::DEFAULT, ExplorationConfig>(Default)));
//#line 353 "/opt/ros/indigo/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<ExplorationConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__); 
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__); 
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__); 
    }
    std::vector<ExplorationConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<ExplorationConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    ExplorationConfig __max__;
    ExplorationConfig __min__;
    ExplorationConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const ExplorationConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static ExplorationConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &ExplorationConfig::__getDescriptionMessage__() 
  {
    return __get_statics__()->__description_message__;
  }

  inline const ExplorationConfig &ExplorationConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }
  
  inline const ExplorationConfig &ExplorationConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }
  
  inline const ExplorationConfig &ExplorationConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }
  
  inline const std::vector<ExplorationConfig::AbstractParamDescriptionConstPtr> &ExplorationConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<ExplorationConfig::AbstractGroupDescriptionConstPtr> &ExplorationConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const ExplorationConfigStatics *ExplorationConfig::__get_statics__()
  {
    const static ExplorationConfigStatics *statics;
  
    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = ExplorationConfigStatics::get_instance();
    
    return statics;
  }


}

#endif // __EXPLORATIONRECONFIGURATOR_H__
